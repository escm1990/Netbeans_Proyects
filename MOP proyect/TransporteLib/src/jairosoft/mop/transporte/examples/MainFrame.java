/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on Jun 12, 2011, 1:19:05 PM
 */
package jairosoft.mop.transporte.examples;

import jairosoft.mop.transporte.Asignacion;
import jairosoft.mop.transporte.ModeloTransporte;
import jairosoft.mop.transporte.ModeloTransporteOptimizado;
import jairosoft.mop.transporte.TablaInicial;
import jairosoft.mop.transporte.TablaInicialCostoMinimo;
import jairosoft.mop.transporte.TablaInicialENO;
import jairosoft.mop.transporte.TablaInicialVogel;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.jdesktop.swingx.JXFrame;
import org.jvnet.substance.SubstanceLookAndFeel;

/**
 *
 * @author edwin
 */
public class MainFrame extends JXFrame {

    /** Creates new form MainFrame */
    DefaultTableModel modeloInicial;
    DefaultTableModel tablaInicialModelo;
    DefaultTableModel modeloOptimo;
    TablaInicial modeloTransporteTablaInicial;
    public MainFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
         this.setIconImage(new ImageIcon(getClass().getResource("/Icono/MxIcon.png")).getImage());
         /*tblModeloInicial.setDefaultRenderer(Object.class, new BorderCellRenderer());
         tblModeloOptimo.setDefaultRenderer(Object.class, new BorderCellRenderer());
         tblTablaInicial.setDefaultRenderer(Object.class, new BorderCellRenderer());*/
        inicializar();
    }
    private void setBorders(JTable tabla)
    {

                
    }
    private void inicializar()
    {
        
        tblModeloInicial.getColumns().get(0).setMaxWidth(80);
        tablaInicialModelo=new DefaultTableModel();
        tblTablaInicial.setModel(tablaInicialModelo);
        modeloOptimo=new DefaultTableModel();
        tblModeloOptimo.setModel(modeloOptimo);
        extraerModeloInicial();
        tbpTablas.setEnabledAt(1, false);
        tbpTablas.setEnabledAt(2, false);
        tbpTablas.setSelectedIndex(0);
    }
    private void extraerModeloInicial()
    {
        modeloInicial=(DefaultTableModel)tblModeloInicial.getModel();
        tblModeloInicial.setModel(modeloInicial);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        tbpTablas = new javax.swing.JTabbedPane();
        pnlModeloInicial = new org.jdesktop.swingx.JXPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel2 = new javax.swing.JLabel();
        spnOfertas = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        spnDemandas = new javax.swing.JSpinner();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jXRadioGroup1 = new org.jdesktop.swingx.JXRadioGroup();
        rbtnVogel = new javax.swing.JRadioButton();
        rbtnCostoMinimo = new javax.swing.JRadioButton();
        rbtnEno = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblModeloInicial = new org.jdesktop.swingx.JXTable();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        pnlTablaInicial = new org.jdesktop.swingx.JXPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTablaInicial = new org.jdesktop.swingx.JXTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblZInicial = new javax.swing.JLabel();
        btnGenerarOptimizado = new javax.swing.JButton();
        pnlModeloOptimizado = new org.jdesktop.swingx.JXPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblModeloOptimo = new org.jdesktop.swingx.JXTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblZOptima = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtpResumen = new javax.swing.JTextPane();

        jRadioButton1.setText("ENO");

        jRadioButton2.setText("Costo Minimo");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("Vogel");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jRadioButton1))
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jRadioButton2))
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jRadioButton3)))
                .addContainerGap(279, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton3)
                .addContainerGap(204, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Metodo X");
        setMinimumSize(new java.awt.Dimension(760, 300));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        tbpTablas.setMinimumSize(new java.awt.Dimension(760, 105));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jLabel2.setText("ORIGENES");
        jToolBar1.add(jLabel2);

        spnOfertas.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(2), null, Integer.valueOf(1)));
        spnOfertas.setValue(3);
        spnOfertas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnOfertasStateChanged(evt);
            }
        });
        jToolBar1.add(spnOfertas);

        jLabel3.setText("DESTINOS");
        jToolBar1.add(jLabel3);

        spnDemandas.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(2), null, Integer.valueOf(1)));
        spnDemandas.setValue(3);
        spnDemandas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnDemandasStateChanged(evt);
            }
        });
        jToolBar1.add(spnDemandas);
        jToolBar1.add(jSeparator1);

        buttonGroup1.add(rbtnVogel);
        rbtnVogel.setSelected(true);
        rbtnVogel.setText("Vogel");

        buttonGroup1.add(rbtnCostoMinimo);
        rbtnCostoMinimo.setText("Costo Minimo");

        buttonGroup1.add(rbtnEno);
        rbtnEno.setText("ENO");

        jLabel1.setText("Metodo:");

        javax.swing.GroupLayout jXRadioGroup1Layout = new javax.swing.GroupLayout(jXRadioGroup1);
        jXRadioGroup1.setLayout(jXRadioGroup1Layout);
        jXRadioGroup1Layout.setHorizontalGroup(
            jXRadioGroup1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXRadioGroup1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnVogel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnCostoMinimo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnEno)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jXRadioGroup1Layout.setVerticalGroup(
            jXRadioGroup1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXRadioGroup1Layout.createSequentialGroup()
                .addGroup(jXRadioGroup1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnVogel)
                    .addComponent(rbtnCostoMinimo)
                    .addComponent(rbtnEno)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jToolBar1.add(jXRadioGroup1);

        tblModeloInicial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "7", "8", "10", "40"},
                {"2", "5", "12", "4", "30"},
                {"3", "9", "7", "8", "45"},
                {"Demanda", "55", "40", "60", null}
            },
            new String [] {
                "O \\ D", "1", "2", "3", "Oferta"
            }
        ));
        tblModeloInicial.setHorizontalScrollEnabled(true);
        tblModeloInicial.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(tblModeloInicial);
        tblModeloInicial.getColumnModel().getColumn(0).setCellRenderer(new RowHeaderCellRenderer());

        jXLabel1.setText("Costos:");

        jButton1.setText("Generar Tabla Inicial");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Nuevo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlModeloInicialLayout = new javax.swing.GroupLayout(pnlModeloInicial);
        pnlModeloInicial.setLayout(pnlModeloInicialLayout);
        pnlModeloInicialLayout.setHorizontalGroup(
            pnlModeloInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlModeloInicialLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlModeloInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlModeloInicialLayout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnlModeloInicialLayout.createSequentialGroup()
                        .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(374, 374, 374)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9))
                    .addGroup(pnlModeloInicialLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        pnlModeloInicialLayout.setVerticalGroup(
            pnlModeloInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlModeloInicialLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlModeloInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlModeloInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(jButton2)
                        .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbpTablas.addTab("Modelo Inicial", pnlModeloInicial);

        tblTablaInicial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "8", "3", "4", "5", "550"},
                {"2", "7", "6", "4", "2", "300"},
                {"3", "2", "4", "3", "3", "260"},
                {"Demanda", "250", "300", "200", "160", null}
            },
            new String [] {
                "D \\ O", "1", "2", "3", "4", "Oferta"
            }
        ));
        tblTablaInicial.setHorizontalScrollEnabled(true);
        tblTablaInicial.setRowSelectionAllowed(false);
        jScrollPane2.setViewportView(tblTablaInicial);
        tblTablaInicial.getColumnModel().getColumn(0).setCellRenderer(new RowHeaderCellRenderer());

        jLabel4.setText("Asignaciones:");

        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Z=");

        lblZInicial.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        btnGenerarOptimizado.setText("Generar modelo optimizado");
        btnGenerarOptimizado.setFocusable(false);
        btnGenerarOptimizado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGenerarOptimizado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGenerarOptimizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarOptimizadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTablaInicialLayout = new javax.swing.GroupLayout(pnlTablaInicial);
        pnlTablaInicial.setLayout(pnlTablaInicialLayout);
        pnlTablaInicialLayout.setHorizontalGroup(
            pnlTablaInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTablaInicialLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTablaInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTablaInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnGenerarOptimizado)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTablaInicialLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(482, 482, 482)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblZInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );
        pnlTablaInicialLayout.setVerticalGroup(
            pnlTablaInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTablaInicialLayout.createSequentialGroup()
                .addComponent(btnGenerarOptimizado)
                .addGap(4, 4, 4)
                .addGroup(pnlTablaInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbpTablas.addTab("Tabla Inicial", pnlTablaInicial);

        tblModeloOptimo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "8", "3", "4", "5", "550"},
                {"2", "7", "6", "4", "2", "300"},
                {"3", "2", "4", "3", "3", "260"},
                {"Demanda", "250", "300", "200", "160", null}
            },
            new String [] {
                "D \\ O", "1", "2", "3", "4", "Oferta"
            }
        ));
        tblModeloOptimo.setHorizontalScrollEnabled(true);
        tblModeloOptimo.setRowSelectionAllowed(false);
        jScrollPane3.setViewportView(tblModeloOptimo);
        tblModeloOptimo.getColumnModel().getColumn(0).setCellRenderer(new RowHeaderCellRenderer());

        jLabel5.setText("Modelo Optimo:");

        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Z=");

        lblZOptima.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel8.setText("Resumen:");

        jScrollPane4.setViewportView(txtpResumen);

        javax.swing.GroupLayout pnlModeloOptimizadoLayout = new javax.swing.GroupLayout(pnlModeloOptimizado);
        pnlModeloOptimizado.setLayout(pnlModeloOptimizadoLayout);
        pnlModeloOptimizadoLayout.setHorizontalGroup(
            pnlModeloOptimizadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlModeloOptimizadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlModeloOptimizadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                    .addComponent(jLabel8)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlModeloOptimizadoLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 472, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblZOptima, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlModeloOptimizadoLayout.setVerticalGroup(
            pnlModeloOptimizadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlModeloOptimizadoLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(pnlModeloOptimizadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblZOptima, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                    .addGroup(pnlModeloOptimizadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbpTablas.addTab("Modelo Optimizado", pnlModeloOptimizado);

        getContentPane().add(tbpTablas);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void spnOfertasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnOfertasStateChanged
        actualizarTamañoOferta();
    }//GEN-LAST:event_spnOfertasStateChanged

    private void spnDemandasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnDemandasStateChanged
        actualizarTamañoDemanda();
    }//GEN-LAST:event_spnDemandasStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ModeloTransporte modeloTransporte = construirModeloTransporte();
        if(modeloTransporte.isEquilibrado())
        {
            crearTablaInicial(modeloTransporte);
            tbpTablas.setEnabledAt(1, true);
            tbpTablas.setSelectedIndex(1);
        }
        else if(JOptionPane.showConfirmDialog(this,"No se puede generar la tabla inicial,\n"
                + " el modelo de transporte se encuentra desequilibrado."
                + "\n\n¿Desea equilibrarlo automaticamente?","Modelo de Transporte",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION)
        {
            modeloTransporte.equilibrar();
            
            spnDemandas.setValue(modeloTransporte.getNumeroColumnas());
            spnOfertas.setValue(modeloTransporte.getNumeroFilas());
            actualizarTamañoDemanda();
            actualizarTamañoOferta();
            actualizarTablaModeloTransporte(modeloTransporte,modeloInicial);
            
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnGenerarOptimizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarOptimizadoActionPerformed
        generarTablaOptimizada();
        
    }//GEN-LAST:event_btnGenerarOptimizadoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        inicializar();
        inicializarTablaInicial();
        spnDemandas.setValue(2);
        spnOfertas.setValue(2);
        actualizarTamañoDemanda();
        actualizarTamañoOferta();
    }//GEN-LAST:event_jButton2ActionPerformed
    private void inicializarTablaInicial()
    {
        for (int i = 0; i<modeloInicial.getRowCount(); i++) {
            for (int j = 1; j < modeloInicial.getColumnCount(); j++) {
                modeloInicial.setValueAt("", i, j);
            }
        }
    }
    private void generarTablaOptimizada()
    {
        ModeloTransporteOptimizado modeloTransporteOptimizado = new ModeloTransporteOptimizado(modeloTransporteTablaInicial);
        System.out.println(modeloTransporteOptimizado.toString());
        modeloOptimo=new DefaultTableModel();
        modeloOptimo.setColumnCount(modeloInicial.getColumnCount());
       modeloOptimo.setRowCount(modeloInicial.getRowCount());
       tblModeloOptimo.setModel(modeloOptimo);
       //Ubicando Cabeceras columnas
        for (int i = 0; i < modeloOptimo.getColumnCount(); i++) {
            tblModeloOptimo.getColumnModel().getColumn(i).setHeaderValue(modeloInicial.getColumnName(i));
            
        }
       //Ubicando cabeceras filas
        for (int i = 0; i < modeloOptimo.getRowCount(); i++) {
            modeloOptimo.setValueAt(modeloInicial.getValueAt(i, 0), i, 0);                        
        }
        txtpResumen.setText(modeloTransporteOptimizado.getResumen());
        txtpResumen.setText(txtpResumen.getText().concat("\nCosto minimo total="+modeloTransporteOptimizado.getCostoTotal()));
        actualizarTablaModeloTransporte(modeloTransporteOptimizado, modeloOptimo);
        tblModeloOptimo.getColumnModel().getColumn(0).setCellRenderer(new RowHeaderCellRenderer());
       tblModeloOptimo.getColumnModel().getColumn(0).setMaxWidth(80);
       lblZOptima.setText(String.valueOf(modeloTransporteOptimizado.getCostoTotal()));
       tbpTablas.setEnabledAt(2, true);
       tbpTablas.setSelectedIndex(2);
       
    }
    private void crearTablaInicial(ModeloTransporte modelo)
    {
       tablaInicialModelo.setColumnCount(modeloInicial.getColumnCount());
       tablaInicialModelo.setRowCount(modeloInicial.getRowCount());
       
       //Ubicando Cabeceras columnas
        for (int i = 0; i < tablaInicialModelo.getColumnCount(); i++) {
            tblTablaInicial.getColumnModel().getColumn(i).setHeaderValue(modeloInicial.getColumnName(i));
            
        }
       //Ubicando cabeceras filas
        for (int i = 0; i < tablaInicialModelo.getRowCount(); i++) {
            tablaInicialModelo.setValueAt(modeloInicial.getValueAt(i, 0), i, 0);                        
        }
       TablaInicial tablaInicial;
       if(rbtnVogel.isSelected())
       {
           tablaInicial=new TablaInicialVogel(modelo);
       }else if(rbtnCostoMinimo.isSelected())
       {
           tablaInicial=new TablaInicialCostoMinimo(modelo);
       }else 
       {
           tablaInicial=new TablaInicialENO(modelo);
       }
       modeloTransporteTablaInicial=tablaInicial;
       actualizarTablaModeloTransporte(tablaInicial, tablaInicialModelo);
       lblZInicial.setText(String.valueOf(modeloTransporteTablaInicial.getCostoTotal()));
       //asignando renderer
       tblTablaInicial.getColumnModel().getColumn(0).setCellRenderer(new RowHeaderCellRenderer());
       tblTablaInicial.getColumnModel().getColumn(0).setMaxWidth(80);
       
    }
    private void actualizarTamañoOferta()
    {
        Integer valorSpn=((Integer)spnOfertas.getValue());
        if(valorSpn>modeloInicial.getRowCount()-1)
        {
            while(valorSpn>modeloInicial.getRowCount()-1)
            {
                Object[] nuevaFila=new Object[modeloInicial.getColumnCount()];
                nuevaFila[0]=modeloInicial.getRowCount();
                modeloInicial.insertRow(modeloInicial.getRowCount()-1, nuevaFila);
            }
        }
        else if(valorSpn<modeloInicial.getRowCount()-1)
        {
            while(valorSpn<modeloInicial.getRowCount()-1)
            {
                modeloInicial.removeRow(modeloInicial.getRowCount()-2);
            }
        }
        tblModeloInicial.getColumnModel().getColumn(0).setCellRenderer(new RowHeaderCellRenderer());
        tblModeloInicial.getColumnModel().getColumn(0).setMaxWidth(80);
    }
    private void actualizarTamañoDemanda()
    {
        Integer valorSpn=((Integer)spnDemandas.getValue());

        if(valorSpn>modeloInicial.getColumnCount()-2)
        {
            ArrayList<Object> datosOferta = extraerDatosColumna(modeloInicial.getColumnCount()-1, modeloInicial);
            modeloInicial.setColumnCount(modeloInicial.getColumnCount()-1);
            while(valorSpn>modeloInicial.getColumnCount()-1)
            {
                modeloInicial.addColumn(modeloInicial.getColumnCount());
                
            }
            modeloInicial.addColumn("Oferta", datosOferta.toArray());          
        }
        else if(valorSpn<modeloInicial.getColumnCount()-2)
        {
            ArrayList<Object> datosOferta = extraerDatosColumna(modeloInicial.getColumnCount()-1, modeloInicial);
            
            modeloInicial.setColumnCount(valorSpn+1);
            modeloInicial.addColumn("Oferta", datosOferta.toArray());
        }
        tblModeloInicial.getColumnModel().getColumn(0).setCellRenderer(new RowHeaderCellRenderer());
        tblModeloInicial.getColumnModel().getColumn(0).setMaxWidth(80);
    }
    
    private void actualizarTablaModeloTransporte(TablaInicial modeloOrigen,DefaultTableModel modeloObjetivo)
    {
        
        
        //Llenando la tabla con valores del modelo
        for (int i = 0; i < modeloOrigen.getNumeroFilas(); i++) {
            for (int j = 0; j < modeloOrigen.getNumeroColumnas(); j++) {
                Asignacion asignacion=modeloOrigen.getAsignacion(i, j);
                modeloObjetivo.setValueAt(asignacion.isVariableBasica()?asignacion.getValor():"", i, j+1);
            }
        }
        //Llenando Ofertas
        for (int i = 0; i < modeloOrigen.getNumeroFilas(); i++) {
            modeloObjetivo.setValueAt(modeloOrigen.getOferta(i), i, modeloObjetivo.getColumnCount()-1);                        
        }
        //Llenando Demandas
        for (int i = 0; i < modeloOrigen.getNumeroColumnas(); i++) {
            modeloObjetivo.setValueAt(modeloOrigen.getDemanda(i), modeloObjetivo.getRowCount()-1, i+1);
            
        }
        modeloObjetivo.setValueAt(modeloOrigen.getTotalDemanda(), modeloObjetivo.getRowCount()-1,modeloObjetivo.getColumnCount()-1);
    }
    private void actualizarTablaModeloTransporte(ModeloTransporte modeloOrigen,DefaultTableModel modeloObjetivo)
    {
        
        
        //Llenando la tabla con valores del modelo
        for (int i = 0; i < modeloOrigen.getNumeroFilas(); i++) {
            for (int j = 0; j < modeloOrigen.getNumeroColumnas(); j++) {
                modeloObjetivo.setValueAt(modeloOrigen.getCosto(i, j), i, j+1);
            }
        }
        //Llenando Ofertas
        for (int i = 0; i < modeloOrigen.getNumeroFilas(); i++) {
            modeloObjetivo.setValueAt(modeloOrigen.getOferta(i), i, modeloObjetivo.getColumnCount()-1);                        
        }
        //Llenando Demandas
        for (int i = 0; i < modeloOrigen.getNumeroColumnas(); i++) {
            modeloObjetivo.setValueAt(modeloOrigen.getDemanda(i), modeloObjetivo.getRowCount()-1, i+1);
            
        }
        modeloObjetivo.setValueAt(modeloOrigen.getTotalDemanda(), modeloObjetivo.getRowCount()-1,modeloObjetivo.getColumnCount()-1);
    }
    private ModeloTransporte construirModeloTransporte()
    {
        ArrayList<ArrayList<Double>> costos=new ArrayList<ArrayList<Double>>();
        ArrayList<Double> ofertas=new ArrayList<Double>();
        ArrayList<Double> demandas=new ArrayList<Double>();
        
        //Obteniendo Costos
        for (int i = 0; i < modeloInicial.getRowCount()-1; i++) {
            costos.add(new ArrayList<Double>());
            for (int j = 1; j < modeloInicial.getColumnCount()-1; j++) {
                String valueOf = String.valueOf(modeloInicial.getValueAt(i, j));
                if(valueOf.trim().isEmpty())
                    valueOf="0";
                costos.get(i).add(Double.parseDouble((valueOf.equals("null")?"0":valueOf)));                                
            }
        }
        
        //Obteniendo Ofertas
        for (int i = 0; i < modeloInicial.getRowCount()-1; i++) {
            String valueOf = String.valueOf(modeloInicial.getValueAt(i, modeloInicial.getColumnCount()-1));
            if(valueOf.trim().isEmpty())
                    valueOf="0";
            ofertas.add(Double.parseDouble(valueOf.equals("null")?"0":valueOf));
        }
        //Obteniendo Demandas
        for (int i = 1; i < modeloInicial.getColumnCount()-1; i++) {
            String valueOf = String.valueOf(modeloInicial.getValueAt(modeloInicial.getRowCount()-1, i));
            if(valueOf.trim().isEmpty())
                    valueOf="0";
            demandas.add(Double.parseDouble(valueOf.equals("null")?"0":valueOf));
            
        }
        return new ModeloTransporte(costos, demandas, ofertas);
    }
    
    private ArrayList<Object> extraerDatosColumna(int index, DefaultTableModel modelo)
    {
        ArrayList<Object> res=new ArrayList<Object>();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            Object value = modelo.getValueAt(i, index);
            res.add(value==null?"":String.valueOf(value));
            
        }
        return res;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
//                                    MainFrame.setDefaultLookAndFeelDecorated(false);
//                                    SubstanceLookAndFeel.setSkin("org.jvnet.substance.skin.SaharaSkin");
//                SubstanceLookAndFeel.setCurrentTheme("org.jvnet.substance.theme.SubstanceOrangeTheme");

//                    UIManager.setLookAndFeel("com.birosoft.liquid.LiquidLookAndFeel");
                    UIManager.setLookAndFeel("ch.randelshofer.quaqua.QuaquaLookAndFeel");
                    new MainFrame().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerarOptimizado;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXRadioGroup jXRadioGroup1;
    private javax.swing.JLabel lblZInicial;
    private javax.swing.JLabel lblZOptima;
    private org.jdesktop.swingx.JXPanel pnlModeloInicial;
    private org.jdesktop.swingx.JXPanel pnlModeloOptimizado;
    private org.jdesktop.swingx.JXPanel pnlTablaInicial;
    private javax.swing.JRadioButton rbtnCostoMinimo;
    private javax.swing.JRadioButton rbtnEno;
    private javax.swing.JRadioButton rbtnVogel;
    private javax.swing.JSpinner spnDemandas;
    private javax.swing.JSpinner spnOfertas;
    private org.jdesktop.swingx.JXTable tblModeloInicial;
    private org.jdesktop.swingx.JXTable tblModeloOptimo;
    private org.jdesktop.swingx.JXTable tblTablaInicial;
    private javax.swing.JTabbedPane tbpTablas;
    private javax.swing.JTextPane txtpResumen;
    // End of variables declaration//GEN-END:variables
}
