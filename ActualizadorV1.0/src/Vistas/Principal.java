/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Principal.java
 *
 * Created on 04-oct-2012, 20:57:05
 */
package Vistas;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import Clases.Actualizador;
import Clases.CarpetasTemporales;
import Clases.ControladorActualizador;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;

import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.io.StringReader;
import java.net.URL;
import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;

//import javax.xml.parsers.DocumentBuilder;
//import javax.xml.parsers.DocumentBuilderFactory;
//
//import org.w3c.dom.Document;
//import org.w3c.dom.Element;
//import org.w3c.dom.Node;
//import org.w3c.dom.NodeList;
/**
 *
 * @author Chavez Vigil
 */
public class Principal extends javax.swing.JFrame {

    public static String ruta = "";
    Actualizador obj = new Actualizador();
    CarpetasTemporales carpetas = new CarpetasTemporales();
    ControladorActualizador ctrlAct = new ControladorActualizador();

    /** Creates new form Principal */
    public Principal() {
        initComponents();
        listarVersiones();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jlListar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbVersiones = new javax.swing.JTable();
        jlFlecha = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Actualizador de Sistema v1.0");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(73, 131, 201));
        net.java.dev.koalalayout.KoalaLayout koalaLayout1 = new net.java.dev.koalalayout.KoalaLayout();
        koalaLayout1.setGridheight(30);
        koalaLayout1.setGridwidth(30);
        jPanel1.setLayout(koalaLayout1);

        jTextField1.setText("Dropbox");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.gridheight = 3;
        jPanel1.add(jTextField1, gridBagConstraints);

        jlListar.setFont(new java.awt.Font("Tahoma", 1, 18));
        jlListar.setForeground(new java.awt.Color(255, 255, 255));
        jlListar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlListar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/listar.png"))); // NOI18N
        jlListar.setToolTipText("Lista versiones disponibles");
        jlListar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jlListar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jlListar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlListarMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 11;
        jPanel1.add(jlListar, gridBagConstraints);

        jtbVersiones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Versión"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbVersiones.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtbVersiones.setRowHeight(22);
        jtbVersiones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbVersionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbVersiones);
        jtbVersiones.getColumnModel().getColumn(0).setResizable(false);
        jtbVersiones.getColumnModel().getColumn(0).setPreferredWidth(295);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 18;
        gridBagConstraints.gridheight = 20;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jlFlecha.setFont(new java.awt.Font("Monospaced", 1, 18));
        jlFlecha.setForeground(new java.awt.Color(255, 255, 255));
        jlFlecha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlFlecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/flecha.png"))); // NOI18N
        jlFlecha.setToolTipText("Versión recomendada");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        jPanel1.add(jlFlecha, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Monospaced", 1, 18));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("LISTAR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/setting.png"))); // NOI18N
        jLabel1.setToolTipText("Configura Repositorio para descarga");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 25;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 5;
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Monospaced", 1, 18));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("VERSIONES");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 3;
        jPanel1.add(jLabel3, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-513)/2, (screenSize.height-376)/2, 513, 376);
    }// </editor-fold>//GEN-END:initComponents

private void jtbVersionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbVersionesMouseClicked
    if (evt.getClickCount() == 2) {
        try {
            String verSelec = jtbVersiones.getValueAt(jtbVersiones.getSelectedRow(), 0).toString();
//            String verAct = obj.leerVersion();
            if (false) {
                JOptionPane.showMessageDialog(null, "Ésta es la versión actualmente instalada");
            } else {

//                ctrlAct.DescargarEnTemporal(verSelec, carpetas);
//                ctrlAct.copiarAPrincipal(ruta + "\\" + verSelec);
//                ctrlAct.vaciarTemporal();
//                ctrlAct.escribirVersionTXT(verSelec);
                new Descarga().setVisible(true);
                this.setVisible(false);
            }
        }catch(Exception e){
            
        }
    }

}//GEN-LAST:event_jtbVersionesMouseClicked

    public void listarVersiones() {
//    ruta = extraerRepositorio(System.getProperty("user.dir") + "\\src\\archivo.xml");
        ruta = extraerRepositorio("C:\\Users\\Erick Cruz\\Documents\\NetBeansProjects\\ActualizadorV1.0\\src\\archivo.xml");

        System.out.println("ruta!!: " + ruta);
        obj.cargarVersiones(ruta, this.jtbVersiones);
        jlFlecha.setVisible(true);
        jtbVersiones.setRowSelectionInterval(0, 0);
    }
private void jlListarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlListarMouseClicked
    listarVersiones();
}//GEN-LAST:event_jlListarMouseClicked

private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    new menuInicio().setVisible(true);
    this.setVisible(false);
}//GEN-LAST:event_formWindowClosed

    public String extraerRepositorio(String filePath) {
        String ruta = "";

//List<Student> items = new ArrayList<Student>();
        try {
            InputStream in = new FileInputStream(filePath);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String entrada;
            String cadena = "";

            while ((entrada = br.readLine()) != null) {
                cadena = cadena + entrada;
            }

            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            DocumentBuilder db = dbf.newDocumentBuilder();

            InputSource archivo = new InputSource();
            archivo.setCharacterStream(new StringReader(cadena));

            Document documento = db.parse(archivo);
            documento.getDocumentElement().normalize();

            NodeList nodeLista = documento.getElementsByTagName("descarga");
            System.out.println("Informacion de los libros");

            for (int s = 0; s < nodeLista.getLength(); s++) {

                Node primerNodo = nodeLista.item(s);
                String titulo;
                String autor;
                String hits;

                if (primerNodo.getNodeType() == Node.ELEMENT_NODE) {

                    Element primerElemento = (Element) primerNodo;

                    NodeList primerNombreElementoLista =
                            primerElemento.getElementsByTagName("repositorio");
                    Element primerNombreElemento =
                            (Element) primerNombreElementoLista.item(0);
                    NodeList primerNombre = primerNombreElemento.getChildNodes();
                    titulo = ((Node) primerNombre.item(0)).getNodeValue().toString();
                    System.out.println("Repositorio: " + titulo);

                    NodeList segundoNombreElementoLista =
                            primerElemento.getElementsByTagName("activa");
                    Element segundoNombreElemento =
                            (Element) segundoNombreElementoLista.item(0);
                    NodeList segundoNombre = segundoNombreElemento.getChildNodes();
                    autor = ((Node) segundoNombre.item(0)).getNodeValue().toString();
                    System.out.println("Activa: " + autor);

                    NodeList tercerNombreElementoLista =
                            primerElemento.getElementsByTagName("direccion");
                    Element tercerNombreElemento =
                            (Element) tercerNombreElementoLista.item(0);
                    NodeList tercerNombre = tercerNombreElemento.getChildNodes();
                    hits = ((Node) tercerNombre.item(0)).getNodeValue().toString();
                    System.out.println("Direccion: " + hits);

                    NodeList cuartoNombreElementoLista =
                            primerElemento.getElementsByTagName("autenticacion");
                    Element cuartoNombreElemento =
                            (Element) cuartoNombreElementoLista.item(0);
                    NodeList cuartoNombre = cuartoNombreElemento.getChildNodes();
                    titulo = ((Node) cuartoNombre.item(0)).getNodeValue().toString();
                    System.out.println("Autenticacion: " + titulo);

                    NodeList quintoNombreElementoLista =
                            primerElemento.getElementsByTagName("usuario");
                    Element quintoNombreElemento =
                            (Element) quintoNombreElementoLista.item(0);
                    NodeList quintoNombre = quintoNombreElemento.getChildNodes();
                    autor = ((Node) quintoNombre.item(0)).getNodeValue().toString();
                    System.out.println("Usuario: " + autor);

                    NodeList sextoNombreElementoLista =
                            primerElemento.getElementsByTagName("clave");
                    Element sextoNombreElemento =
                            (Element) sextoNombreElementoLista.item(0);
                    NodeList sextoNombre = sextoNombreElemento.getChildNodes();
                    hits = ((Node) sextoNombre.item(0)).getNodeValue().toString();
                    System.out.println("Clave: " + hits);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ruta;


    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jlFlecha;
    private javax.swing.JLabel jlListar;
    public static javax.swing.JTable jtbVersiones;
    // End of variables declaration//GEN-END:variables
}
