package playlistxml;
import java.awt.Color;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import jfm.mp3;
/**
 * @web http://jc-mouse.blogspot.com/
 * @author Mouse
 */
public class playlist extends javax.swing.JFrame {
    XMLpanel miplaylist;
    mp3 mimp3= new mp3();
    String file = null;//ruta del archivo mp3
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo XML","xml");
    /** Creates new form playlist */
    public playlist() {
        initComponents();
        this.setTitle("Playlist con XML [by Mouse]");         
        this.getContentPane().setBackground(Color.black);        
        this.setLocationRelativeTo(null);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SPN = new javax.swing.JScrollPane();
        JPN = new javax.swing.JPanel();
        cmdplay = new javax.swing.JButton();
        cmdstop = new javax.swing.JButton();
        cmdLoadPlaylist = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        JPN.setBackground(new java.awt.Color(0, 0, 0));
        JPN.setLayout(new javax.swing.BoxLayout(JPN, javax.swing.BoxLayout.Y_AXIS));
        SPN.setViewportView(JPN);

        cmdplay.setText("DALE PLAY");
        cmdplay.setEnabled(false);
        cmdplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdplayActionPerformed(evt);
            }
        });

        cmdstop.setText("DETENER");
        cmdstop.setEnabled(false);
        cmdstop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdstopActionPerformed(evt);
            }
        });

        cmdLoadPlaylist.setText("Load Playlist");
        cmdLoadPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLoadPlaylistActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/album/logo.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SPN, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmdstop, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addComponent(cmdplay, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addComponent(cmdLoadPlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmdLoadPlaylist)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdplay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdstop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1))
                    .addComponent(SPN, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdplayActionPerformed
        this.file = miplaylist.getSongSelecionado();
        if(this.file.length()>0){
            if(mimp3.play(this.file)){
                cmdplay.setEnabled(false);
                cmdstop.setEnabled(true);
            }
            
        }         
}//GEN-LAST:event_cmdplayActionPerformed

    private void cmdstopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdstopActionPerformed
          mimp3.stop();
          cmdstop.setEnabled(false);
          cmdplay.setEnabled(true);
}//GEN-LAST:event_cmdstopActionPerformed

    private void cmdLoadPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLoadPlaylistActionPerformed
    JFileChooser fileChooser = new JFileChooser();       
    fileChooser.setFileFilter(filter);
    int result = fileChooser.showOpenDialog(null);  
    //si se presiono el boton abrir
    if ( result == JFileChooser.APPROVE_OPTION ){ 
                 String s = fileChooser.getSelectedFile().toString();              
                 //si ya habia un XMLpanel lo removemos
                 if(JPN.getComponentCount()>0)JPN.remove(miplaylist);                 
                 //creamos y agregamos el XMLpanel
                 miplaylist = new XMLpanel(s);                
                 JPN.add(miplaylist);             
                 //----
                 cmdplay.setEnabled(true);                 
                 miplaylist.repaint();            
        }       
    miplaylist.updateUI();
}//GEN-LAST:event_cmdLoadPlaylistActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new playlist().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPN;
    private javax.swing.JScrollPane SPN;
    private javax.swing.JButton cmdLoadPlaylist;
    private javax.swing.JButton cmdplay;
    private javax.swing.JButton cmdstop;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    
}
