/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrameParcial1.java
 *
 * Created on 07-sep-2010, 20:39:02
 */
package parciali_programacioniii;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 */
public class FrameParcial1 extends javax.swing.JFrame {

    private DefaultTableModel modeloTabla;

    /** Creates new form FrameParcial1 */
    public FrameParcial1() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfFilas = new javax.swing.JTextField();
        jtfColumnas = new javax.swing.JTextField();
        jftfBuscador = new javax.swing.JFormattedTextField();
        jbCrearTabla = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbAutor = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtSopaLetras = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(447, 288));
        setResizable(false);

        jLabel1.setText("Buscador:");

        jLabel2.setText("Filas:");

        jLabel3.setText("Columnas:");

        jtfFilas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfFilasMouseClicked(evt);
            }
        });

        jtfColumnas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfColumnasMouseClicked(evt);
            }
        });

        jftfBuscador.setToolTipText("Ingrese solo letras por favor");

        jbCrearTabla.setText("Crear Tabla");
        jbCrearTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCrearTablaActionPerformed(evt);
            }
        });

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbAutor.setText("Autor");
        jbAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAutorActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jtSopaLetras.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jtSopaLetras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jtSopaLetras);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfFilas)
                            .addComponent(jtfColumnas, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jftfBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbCrearTabla)
                                .addGap(18, 18, 18)
                                .addComponent(jbBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbSalir, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfFilas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jftfBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAutor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar)
                    .addComponent(jbSalir)
                    .addComponent(jbCrearTabla))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean horizontal() {
        boolean res = false;
        char[] auxiliar = new char[this.jftfBuscador.getText().length()];

        String inicio = "", fin = "", sentido = "";
        auxiliar = this.jftfBuscador.getText().toCharArray();
        for (int filas = 0; filas < this.modeloTabla.getRowCount(); filas++) {
            for (int columnas = 0; columnas < this.modeloTabla.getColumnCount(); columnas++) {
                if (String.valueOf(auxiliar[0]).equals(this.jtSopaLetras.getValueAt(filas, columnas).toString())) {
                    inicio = String.valueOf(filas) + "," + String.valueOf(columnas);
                } else {
                    if (String.valueOf(auxiliar[auxiliar.length - 1]).equals(this.jtSopaLetras.getValueAt(filas, columnas).toString())) {
                        fin = String.valueOf(filas) + "," + String.valueOf(columnas);
                    }
                }
                if (this.jtSopaLetras.getValueAt(filas, columnas).toString().equalsIgnoreCase(String.valueOf(auxiliar[columnas]))) {
                    res = true;
                } else {
                    res = false;
                    break;
                }
                if (res == true) {
                    sentido = "de izquierda a derecha";
                }

                if (res == false) {
                    for (int h = this.modeloTabla.getColumnCount(); h >= 0; h--) {
                        if (String.valueOf(auxiliar[0]).equals(this.jtSopaLetras.getValueAt(filas, h).toString())) {
                            inicio = String.valueOf(filas) + "," + String.valueOf(h);
                        } else {
                            if (String.valueOf(auxiliar[auxiliar.length - 1]).equals(this.jtSopaLetras.getValueAt(filas, columnas).toString())) {
                                fin = String.valueOf(filas) + "," + String.valueOf(h);
                            }
                        }
                        if (this.jtSopaLetras.getValueAt(filas, h).toString().equalsIgnoreCase(String.valueOf(auxiliar[h]))) {
                            res = true;
                        } else {
                            res = false;
                            break;
                        }
                    }
                    if (res == true) {
                        sentido = "de derecha a izquierda";
                    }
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, inicio);
        JOptionPane.showMessageDialog(rootPane, fin);
        JOptionPane.showMessageDialog(rootPane, sentido);
        return res;
    }

    private boolean vertical() {
        boolean res = false;
        char[] auxiliar = new char[this.jftfBuscador.getText().length()];

        String inicio = "", fin = "", sentido = "";
        auxiliar = this.jftfBuscador.getText().toCharArray();
        for (int columnas = 0; columnas < this.modeloTabla.getColumnCount(); columnas++) {
            for (int filas = 0; filas < this.modeloTabla.getRowCount(); filas++) {
                if (String.valueOf(auxiliar[0]).equals(this.jtSopaLetras.getValueAt(filas, columnas).toString())) {
                    inicio = String.valueOf(filas) + "," + String.valueOf(columnas);
                } else {
                    if (String.valueOf(auxiliar[auxiliar.length - 1]).equals(this.jtSopaLetras.getValueAt(filas, columnas).toString())) {
                        fin = String.valueOf(filas) + "," + String.valueOf(columnas);
                    }
                }
                if (this.jtSopaLetras.getValueAt(filas, columnas).toString().equalsIgnoreCase(String.valueOf(auxiliar[columnas]))) {
                    res = true;
                } else {
                    res = false;
                    break;
                }
                if (res == true) {
                    sentido = "de abajo hacia arriba";
                }

                if (res == false) {
                    for (int h = this.modeloTabla.getColumnCount(); h >= 0; h--) {
                        if (String.valueOf(auxiliar[0]).equals(this.jtSopaLetras.getValueAt(filas, h).toString())) {
                            inicio = String.valueOf(filas) + "," + String.valueOf(h);
                        } else {
                            if (String.valueOf(auxiliar[auxiliar.length - 1]).equals(this.jtSopaLetras.getValueAt(filas, columnas).toString())) {
                                fin = String.valueOf(filas) + "," + String.valueOf(h);
                            }
                        }
                        if (this.jtSopaLetras.getValueAt(filas, h).toString().equalsIgnoreCase(String.valueOf(auxiliar[h]))) {
                            res = true;
                        } else {
                            res = false;
                            break;
                        }
                    }
                    if (res == true) {
                        sentido = "de arriba hacia abajo";
                    }
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, inicio);
        JOptionPane.showMessageDialog(rootPane, fin);
        JOptionPane.showMessageDialog(rootPane, sentido);
        return res;
    }

    private void jbCrearTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCrearTablaActionPerformed
        // TODO add your handling code here:
        int filas, columnas;
        filas = Integer.parseInt(this.jtfFilas.getText());
        columnas = Integer.parseInt(this.jtfColumnas.getText());
        modeloTabla = new DefaultTableModel(filas, columnas);
        this.jtSopaLetras.setModel(modeloTabla);
        this.jtfFilas.setText("");
        this.jtfColumnas.setText("");
    }//GEN-LAST:event_jbCrearTablaActionPerformed

    private void jtfFilasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfFilasMouseClicked
        // TODO add your handling code here:
        this.jtfFilas.setText("");
    }//GEN-LAST:event_jtfFilasMouseClicked

    private void jtfColumnasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfColumnasMouseClicked
        // TODO add your handling code here:
        this.jtfColumnas.setText("");
    }//GEN-LAST:event_jtfColumnasMouseClicked

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // TODO add your handling code here:

        try {
            this.horizontal();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Imposible realizar la busqueda horizontal");
        }

        try {
            this.vertical();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Imposible realizar la busqueda vertical");
        }

    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAutorActionPerformed
        // TODO add your handling code here:
        jdInformacion obj = new jdInformacion(new FrameParcial1(), true);
        obj.setLocationRelativeTo(null);
        obj.setVisible(true);

    }//GEN-LAST:event_jbAutorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                FrameParcial1 obj = new FrameParcial1();
                obj.setLocationRelativeTo(null);
                obj.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAutor;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCrearTabla;
    private javax.swing.JButton jbSalir;
    private javax.swing.JFormattedTextField jftfBuscador;
    private javax.swing.JTable jtSopaLetras;
    private javax.swing.JTextField jtfColumnas;
    private javax.swing.JTextField jtfFilas;
    // End of variables declaration//GEN-END:variables
}
